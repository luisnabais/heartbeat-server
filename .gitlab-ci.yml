image: docker:latest

stages:
  - tag
  - build

variables:
  DOCKER_REGISTRY: "${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}"
  BUILDX_PLATFORMS: "linux/amd64,linux/arm64/v8"

services:
  - docker:dind

auto-tag:
  stage: tag
  image: alpine:latest
  before_script:
    - apk add --no-cache git
  script:
  - |
    VERSION=$(cat VERSION)
    echo "VersÃ£o: $VERSION"
    if git rev-parse "$VERSION" >/dev/null 2>&1; then
      echo "Tag $VERSION already exists, pipeline won't create a new tag."
      exit 0
    fi
    git config --global user.email "ci@example.com"
    git config --global user.name "CI Bot"
    git tag "$VERSION"
    git remote set-url origin https://gitlab-ci-token:${PUSH_TOKEN}@gitlab.com/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}.git
    git push origin "$VERSION"
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
      changes:
        - VERSION

container-build:
  stage: build
  before_script:
    - docker login -u ${CI_PROJECT_NAMESPACE} -p ${DOCKER_TOKEN}
    - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER $CI_REGISTRY --password-stdin
    - mkdir -p ~/.docker/cli-plugins
    - wget -O ~/.docker/cli-plugins/docker-pushrm https://github.com/christian-korneck/docker-pushrm/releases/latest/download/docker-pushrm_linux_amd64
    - chmod +x ~/.docker/cli-plugins/docker-pushrm
  script:
    - docker buildx create --use
    - docker buildx build
      --provenance=false
      --platform ${BUILDX_PLATFORMS}
      --tag ${CI_REGISTRY_IMAGE}:latest
      --tag ${CI_REGISTRY_IMAGE}:${CI_COMMIT_TAG}
      --tag ${DOCKER_REGISTRY}:${CI_COMMIT_TAG}
      --push
      .
    - docker pushrm ${DOCKER_REGISTRY}
  rules:
    - if: $CI_COMMIT_TAG